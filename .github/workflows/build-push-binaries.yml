name: Build and Release Wails App

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'  # Trigger release on version tags like v1.0.0

jobs:
  build-linux:
    name: Build for Linux
    runs-on: ubuntu-latest
    outputs:
      artifact-name: ${{ steps.upload.outputs.artifact-name }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
      
      - name: Install Linux build dependencies
        run: |
          sudo apt update
          sudo apt install -y software-properties-common
          sudo add-apt-repository universe
          sudo apt update
          sudo apt install -y \
          libgtk-3-dev \
          libwebkit2gtk-4.1-dev \
          libglib2.0-dev \
          libcairo2-dev \
          libpango1.0-dev \
          libgdk-pixbuf2.0-dev \
          pkg-config \
          libsoup-3.0-dev \
          libjson-glib-dev

      - name: Install Wails CLI
        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest

      - name: Build Linux binary
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          wails build -platform linux/amd64 -tags webkit2_41

      - name: Upload artifact
        id: upload
        uses: actions/upload-artifact@v4
        with:
          name: Periodentiqual-linux
          path: build/bin/*

  build-windows:
    name: Build for Windows
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Install Wails CLI
        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest

      - name: Add Go bin to PATH
        run: echo "$env:GOPATH\\bin" | Out-File -Append -Encoding ascii $env:GITHUB_PATH

      - name: Build Windows binary
        run: |
          wails build -platform windows/amd64

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Periodentiqual-windows
          path: build/bin/*

  release:
    name: Publish GitHub Release
    needs: [build-linux, build-windows]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Display artifacts
        run: ls -R dist

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GH_RELEASE_TOKEN }}